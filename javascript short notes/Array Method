toString()
join()
JavaScript Array Methods
  toString() converts an array to a string of (comma separated) array values.
      const fruits = ["Banana", "Orange", "Apple", "Mango"];
      document.getElementById("demo").innerHTML = fruits.toString();
      Result:

      Banana,Orange,Apple,Mango
      
      .pop()     : The pop() method removes the last element from an array:
      .shift()   : Shifting is equivalent to popping, working on the first element instead of the last.
      .push()    : the push() method adds a new element to an array (at the end):
      .unshift() : The unshift() method adds a new element to an array (at the beginning),       
      .join()    : method also joins all array elements into a string //fruits.join(" * ") ,Banana * Orange * Apple * Mango
       Delete    : elements can be deleted by using the JavaScript operator delete  
       .splice   : The splice() method can be used to add new items to an array
                       const fruits = ["Banana", "Orange", "Apple", "Mango"];
                       fruits.splice(2, 2, "Lemon", "Kiwi");
                       result : Banana,Orange,Lemon,Kiwi
                       first parameter (2) defines the position where new elements should be added (spliced in).
                       The second parameter (2) defines how many elements should be removed.
      .concat() : The concat() method creates a new array by merging (concatenating) existing arrays:
                   syntax; 
                          newArray = Arrayname1.concat(Arrayname2);//merge two array  
                          myChildren = array1.concat(array2, array3);//merge three array 
                          It always returns a new array.
                 
